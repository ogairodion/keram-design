{{- $globals := ternary .Values.global.prod .Values.global.dev (eq .Values.global.env_name "prod") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.appName }}
spec:
  replicas: {{ $globals.instanceCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: {{ .Values.global.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.global.appName }}
        ksync: {{ .Values.global.appName }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/39-app-cm.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Values.global.appName }}
          image: {{ .Values.werf.image.app }}
          env:
          ports:
            - name: http
              containerPort: 80
          volumeMounts:
            - name: config-volume-nginx-1
              mountPath: /etc/nginx
            - name: config-volume-nginx-2
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: config-volume-nginx-1
          configMap:
            name: nginx-config-1
        - name: config-volume-nginx-2
          configMap:
            name: nginx-config-2
      imagePullSecrets:
        - name: docker-registry{{- if ne .Values.global.env_name "prod" }}-dev{{- end}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.global.appName }}
spec:
  ports:
    - port: 80
      name: http
  selector:
    app: {{ .Values.global.appName }}
---
